{"version":3,"sources":["server.js"],"names":["express","require","path","session","app","set","join","__dirname","use","urlencoded","extended","json","secret","resave","saveUninitialized","indexRouter","shopRouter","productsRouter","cartRouter","aboutRouter","faqRouter","authRouter","profileRouter","loginRouter","registerRouter","checkoutRouter","PORT","process","env","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAMG,GAAG,GAAGJ,OAAO,EAAnB,C,CAGA;;AACAI,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBH,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB,E,CAAkD;AAElD;;AACAH,GAAG,CAACI,GAAJ,CAAQR,OAAO,CAACS,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEAN,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAmBR,OAAO,UAAP,CAAeE,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,QAA/B,CAAf,CAAnB;AAEAH,GAAG,CAACI,GAAJ,CAAQR,OAAO,CAACW,IAAR,EAAR,E,CAEA;;AACAP,GAAG,CAACI,GAAJ,CAAQR,OAAO,UAAP,CAAeE,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQL,OAAO,CAAC;AACdS,EAAAA,MAAM,EAAE,iBADM;AAEdC,EAAAA,MAAM,EAAE,KAFM;AAGdC,EAAAA,iBAAiB,EAAE;AAHL,CAAD,CAAf,E,CAMA;;AACA,IAAMC,WAAW,GAAGd,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAMe,UAAU,GAAGf,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMgB,cAAc,GAAGhB,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAMiB,UAAU,GAAGjB,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMkB,WAAW,GAAGlB,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAMmB,SAAS,GAAGnB,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAMoB,UAAU,GAAGpB,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMqB,aAAa,GAAGrB,OAAO,CAAC,kBAAD,CAA7B;;AACA,IAAMsB,WAAW,GAAGtB,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAMuB,cAAc,GAAGvB,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAMwB,cAAc,GAAGxB,OAAO,CAAC,mBAAD,CAA9B;;AAEAG,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaO,WAAb;AACAX,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBQ,UAAjB;AACAZ,GAAG,CAACI,GAAJ,CAAQ,UAAR,EAAoBS,cAApB;AACAb,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBU,UAAjB;AACAd,GAAG,CAACI,GAAJ,CAAQ,QAAR,EAAkBW,WAAlB;AACAf,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgBY,SAAhB;AACAhB,GAAG,CAACI,GAAJ,CAAQ,UAAR,EAAoBc,aAApB;AACAlB,GAAG,CAACI,GAAJ,CAAQ,QAAR,EAAkBe,WAAlB;AACAnB,GAAG,CAACI,GAAJ,CAAQ,WAAR,EAAqBgB,cAArB;AACApB,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBa,UAAjB;AACAjB,GAAG,CAACI,GAAJ,CAAQ,WAAR,EAAqBiB,cAArB,E,CACA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAtB,GAAG,CAACyB,MAAJ,CAAWH,IAAX,EAAiB,YAAM;AACrBI,EAAAA,OAAO,CAACC,GAAR,8CAAkDL,IAAlD;AACD,CAFD","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst session = require('express-session');\nconst app = express();\n\n\n//set Pug as the view engine\napp.set('view engine', 'pug');\napp.set('views', path.join(__dirname, 'views'));  //tells Express where to find our Pug templates\n\n//middleware to parse form data\napp.use(express.urlencoded({ extended: true}));\n\napp.use('/images', express.static(path.join(__dirname, 'public', 'images')));\n\napp.use(express.json());\n\n//static files (CSS, images, etc.)\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use(session({\n  secret: 'your-secret-key',\n  resave: false,\n  saveUninitialized: true\n}));\n\n//import and use route files\nconst indexRouter = require('./routes/index');\nconst shopRouter = require('./routes/shop');\nconst productsRouter = require('./routes/products');\nconst cartRouter = require('./routes/cart');\nconst aboutRouter = require('./routes/about');\nconst faqRouter = require('./routes/faq');\nconst authRouter = require('./routes/auth');\nconst profileRouter = require('./routes/profile');\nconst loginRouter = require('./routes/login');\nconst registerRouter = require('./routes/register');\nconst checkoutRouter = require('./routes/checkout');\n\napp.use('/', indexRouter);\napp.use('/shop', shopRouter);\napp.use('/product', productsRouter);\napp.use('/cart', cartRouter);\napp.use('/about', aboutRouter);\napp.use('/faq', faqRouter);\napp.use('/profile', profileRouter);\napp.use('/login', loginRouter);\napp.use('/register', registerRouter);\napp.use('/auth', authRouter);\napp.use('/checkout', checkoutRouter);\n// Start the server\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Server running at http://localhost:${PORT}`);\n});"],"file":"server.dev.js"}